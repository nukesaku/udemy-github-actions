name: backend

on:
  push:
    branches:
      - master
  # schedule:
    # 日本時間で21時に実行。12(UTC) + 9 = 21(JST)
    # - cron: '0 12 * * *'
  

defaults:
  run:
    working-directory: backend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - run: npm ci
      - run: npm run test -- --coverage
      - run: npm run build
      
      - run: node dist/index.js &
      - run: npx wait-on -t 10000 http://localhost:8080/api/health
      - run: npm run test:api

      - uses: actions/upload-artifact@v3
        if: always() # jobが失敗しても常に実行。通常のGithubActionsは失敗した時点で処理が中断されてしまう
        with:
          name: coverage
          path: backend/coverage/** # **: coverage以下のすべてのファイル
          retention-days: 5 # 5日間保存される
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: backend/dist/index.js
          retention-days: 5

  deploy: # job間で実行環境は共有されない
    needs: build # buildのjobが成功してからdeployのjobが始まる
    if: github.event_name == 'push' # git pushされた時だけdeployを実行
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: backend/dist # このディレクトリにダウンロードされる
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.BACKEND_SERVER_SSH_KEY }}
          known_hosts: ${{ secrets.BACKEND_SERVER_KNOWN_HOSTS }}
      - run: rsync -v dist/index.js ${SERVER_USER}@${SERVER_IP}:~/index.js
        env:
          SERVER_USER: ${{ secrets.BACKEND_SERVER_USER }}
          SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}
      - run: ssh ${SERVER_USER}@${SERVER_IP} sudo systemctl restart backend
        env:
          SERVER_USER: ${{ secrets.BACKEND_SERVER_USER }}
          SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}
      - run: ssh ${SERVER_USER}@${SERVER_IP} systemctl status backend
        env:
          SERVER_USER: ${{ secrets.BACKEND_SERVER_USER }}
          SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}
